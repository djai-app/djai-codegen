---
openapi: 3.0.3
info:
  title: Rater Catalog API
  version: "1.0"
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
servers:
- url: http://localhost:8041
  description: Inferred Url
paths:
  /action-sets:
    get:
      tags:
      - action-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionSet'
      tags:
      - action-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST
      summary: save
  /action-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActionSet'
      tags:
      - action-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST
      summary: saveAll
    delete:
      tags:
      - action-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE
      summary: deleteAll
  /action-sets/{id}:
    get:
      tags:
      - action-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionSet'
      tags:
      - action-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT
      summary: update
    delete:
      tags:
      - action-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE
      summary: delete
  /action-triggers:
    get:
      tags:
      - action-trigger-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionTrigger'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_1
      summary: getAll
  /action-triggers/{id}:
    get:
      tags:
      - action-trigger-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          enum:
          - AGGREGATOR_ABOVE_THRESHOLD_X
          - ALLOWANCE_ALLOCATED
          - BALANCE_ABOVE_THRESHOLD_X
          - BALANCE_BELOW_THRESHOLD_X
          - BALANCE_DEPLETION
          - BALANCE_EXPIRED
          - BALANCE_TOP_UP
          - OFFER_ALLOCATED
          - OFFER_DE_ALLOCATED
          - OFFER_FIRST_CHARGE
          - OFFER_RENEWAL_FAILED
          - OFFER_RENEWED
          - X_DAYS_BEFORE_BALANCE_EXPIRATION
          - X_DAYS_BEFORE_OFFER_EXPIRATION
          - X_DAYS_BEFORE_OFFER_RENEWAL
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionTrigger'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_1
      summary: getById
  /calendars/properties/{id}:
    get:
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_2
      summary: getById
  /balances:
    get:
      tags:
      - catalog-balance-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBalance'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_2
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBalance'
      tags:
      - catalog-balance-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBalance'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_1
      summary: save
  /balances/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBalance'
      tags:
      - catalog-balance-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBalance'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_1
      summary: saveAll
    delete:
      tags:
      - catalog-balance-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBalance'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_1
      summary: deleteAll
  /balances/{id}:
    get:
      tags:
      - catalog-balance-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBalance'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_3
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBalance'
      tags:
      - catalog-balance-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBalance'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_1
      summary: update
    delete:
      tags:
      - catalog-balance-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBalance'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_1
      summary: delete
  /billing-action-sets:
    get:
      tags:
      - catalog-billing-action-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingActionSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_3
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingActionSet'
      tags:
      - catalog-billing-action-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingActionSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_2
      summary: save
  /billing-action-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBillingActionSet'
      tags:
      - catalog-billing-action-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingActionSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_2
      summary: saveAll
    delete:
      tags:
      - catalog-billing-action-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingActionSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_2
      summary: deleteAll
  /billing-action-sets/{id}:
    get:
      tags:
      - catalog-billing-action-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingActionSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_4
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingActionSet'
      tags:
      - catalog-billing-action-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingActionSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_2
      summary: update
    delete:
      tags:
      - catalog-billing-action-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingActionSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_2
      summary: delete
  /billing-bonuses:
    get:
      tags:
      - catalog-billing-bonus-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingBonus'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_4
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingBonus'
      tags:
      - catalog-billing-bonus-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonus'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_3
      summary: save
  /billing-bonuses/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBillingBonus'
      tags:
      - catalog-billing-bonus-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingBonus'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_3
      summary: saveAll
    delete:
      tags:
      - catalog-billing-bonus-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingBonus'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_3
      summary: deleteAll
  /billing-bonuses/{id}:
    get:
      tags:
      - catalog-billing-bonus-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonus'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_5
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingBonus'
      tags:
      - catalog-billing-bonus-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonus'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_3
      summary: update
    delete:
      tags:
      - catalog-billing-bonus-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonus'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_3
      summary: delete
  /billing-bonus-sets:
    get:
      tags:
      - catalog-billing-bonus-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingBonusSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_5
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingBonusSet'
      tags:
      - catalog-billing-bonus-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonusSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_4
      summary: save
  /billing-bonus-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBillingBonusSet'
      tags:
      - catalog-billing-bonus-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingBonusSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_4
      summary: saveAll
    delete:
      tags:
      - catalog-billing-bonus-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingBonusSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_4
      summary: deleteAll
  /billing-bonus-sets/{id}:
    get:
      tags:
      - catalog-billing-bonus-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonusSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_6
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingBonusSet'
      tags:
      - catalog-billing-bonus-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonusSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_4
      summary: update
    delete:
      tags:
      - catalog-billing-bonus-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingBonusSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_4
      summary: delete
  /billing-discounts:
    get:
      tags:
      - catalog-billing-discount-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingDiscount'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_6
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingDiscount'
      tags:
      - catalog-billing-discount-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscount'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_5
      summary: save
  /billing-discounts/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBillingDiscount'
      tags:
      - catalog-billing-discount-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingDiscount'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_5
      summary: saveAll
    delete:
      tags:
      - catalog-billing-discount-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingDiscount'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_5
      summary: deleteAll
  /billing-discounts/{id}:
    get:
      tags:
      - catalog-billing-discount-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscount'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_7
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingDiscount'
      tags:
      - catalog-billing-discount-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscount'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_5
      summary: update
    delete:
      tags:
      - catalog-billing-discount-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscount'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_5
      summary: delete
  /billing-discount-sets:
    get:
      tags:
      - catalog-billing-discount-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingDiscountSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_7
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingDiscountSet'
      tags:
      - catalog-billing-discount-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscountSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_6
      summary: save
  /billing-discount-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBillingDiscountSet'
      tags:
      - catalog-billing-discount-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingDiscountSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_6
      summary: saveAll
    delete:
      tags:
      - catalog-billing-discount-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingDiscountSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_6
      summary: deleteAll
  /billing-discount-sets/{id}:
    get:
      tags:
      - catalog-billing-discount-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscountSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_8
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingDiscountSet'
      tags:
      - catalog-billing-discount-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscountSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_6
      summary: update
    delete:
      tags:
      - catalog-billing-discount-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingDiscountSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_6
      summary: delete
  /billing-taxes:
    get:
      tags:
      - catalog-billing-tax-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingTax'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_8
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingTax'
      tags:
      - catalog-billing-tax-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTax'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_7
      summary: save
  /billing-taxes/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBillingTax'
      tags:
      - catalog-billing-tax-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingTax'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_7
      summary: saveAll
    delete:
      tags:
      - catalog-billing-tax-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingTax'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_7
      summary: deleteAll
  /billing-taxes/{id}:
    get:
      tags:
      - catalog-billing-tax-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTax'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_9
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingTax'
      tags:
      - catalog-billing-tax-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTax'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_7
      summary: update
    delete:
      tags:
      - catalog-billing-tax-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTax'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_7
      summary: delete
  /billing-tax-sets:
    get:
      tags:
      - catalog-billing-tax-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingTaxSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_9
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingTaxSet'
      tags:
      - catalog-billing-tax-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTaxSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_8
      summary: save
  /billing-tax-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogBillingTaxSet'
      tags:
      - catalog-billing-tax-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingTaxSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_8
      summary: saveAll
    delete:
      tags:
      - catalog-billing-tax-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBillingTaxSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_8
      summary: deleteAll
  /billing-tax-sets/{id}:
    get:
      tags:
      - catalog-billing-tax-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTaxSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_10
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBillingTaxSet'
      tags:
      - catalog-billing-tax-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTaxSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_8
      summary: update
    delete:
      tags:
      - catalog-billing-tax-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogBillingTaxSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_8
      summary: delete
  /calendars:
    get:
      tags:
      - catalog-calendar-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogCalendar'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_10
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogCalendar'
      tags:
      - catalog-calendar-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendar'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_9
      summary: save
  /calendars/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogCalendar'
      tags:
      - catalog-calendar-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogCalendar'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_9
      summary: saveAll
    delete:
      tags:
      - catalog-calendar-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogCalendar'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_9
      summary: deleteAll
  /calendars/{id}:
    get:
      tags:
      - catalog-calendar-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendar'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_11
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogCalendar'
      tags:
      - catalog-calendar-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendar'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_9
      summary: update
    delete:
      tags:
      - catalog-calendar-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendar'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_9
      summary: delete
  /calendars/{parentId}/properties:
    get:
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_11
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogCalendarProperties'
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_10
      summary: save
  /calendars/{parentId}/properties/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogCalendarProperties'
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_10
      summary: saveAll
    delete:
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_10
      summary: deleteAll
  /calendars/{parentId}/properties/{id}:
    get:
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_12
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogCalendarProperties'
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_10
      summary: update
    delete:
      tags:
      - catalog-calendar-properties-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCalendarProperties'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_10
      summary: delete
  /layouts:
    get:
      tags:
      - catalog-layout-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_12
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogLayout'
      tags:
      - catalog-layout-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_11
      summary: save
  /layouts/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogLayout'
      tags:
      - catalog-layout-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_11
      summary: saveAll
    delete:
      tags:
      - catalog-layout-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_11
      summary: deleteAll
  /layouts/{id}:
    get:
      tags:
      - catalog-layout-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_13
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogLayout'
      tags:
      - catalog-layout-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_11
      summary: update
    delete:
      tags:
      - catalog-layout-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_11
      summary: delete
  /layouts/{id}/download:
    get:
      tags:
      - catalog-layout-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: downloadFileUsingGET
      summary: downloadFile
  /layouts/{id}/upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  format: binary
                  description: file
                  type: string
      tags:
      - catalog-layout-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLayout'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: uploadFileUsingPOST
      summary: uploadFile
  /lcp-configurations:
    get:
      tags:
      - catalog-lcp-configuration-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_13
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogLcpConfiguration'
      tags:
      - catalog-lcp-configuration-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_12
      summary: save
  /lcp-configurations/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogLcpConfiguration'
      tags:
      - catalog-lcp-configuration-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_12
      summary: saveAll
    delete:
      tags:
      - catalog-lcp-configuration-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_12
      summary: deleteAll
  /lcp-configurations/template/{lcpTemplateId}:
    get:
      tags:
      - catalog-lcp-configuration-controller
      parameters:
      - style: simple
        name: lcpTemplateId
        description: lcpTemplateId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: findByLcpTemplateIdUsingGET
      summary: findByLcpTemplateId
  /lcp-configurations/{id}:
    get:
      tags:
      - catalog-lcp-configuration-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_14
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogLcpConfiguration'
      tags:
      - catalog-lcp-configuration-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_12
      summary: update
    delete:
      tags:
      - catalog-lcp-configuration-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLcpConfiguration'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_12
      summary: delete
  /lcp-templates:
    get:
      tags:
      - catalog-lcp-template-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLcpTemplate'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_14
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogLcpTemplate'
      tags:
      - catalog-lcp-template-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLcpTemplate'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_13
      summary: save
  /lcp-templates/external:
    get:
      tags:
      - catalog-lcp-template-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalLcpTemplateDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getExternalLcpTemplatesUsingGET
      summary: getExternalLcpTemplates
  /lcp-templates/refresh:
    get:
      tags:
      - catalog-lcp-template-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogLcpTemplate'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: refreshAllTemplatesUsingGET
      summary: refreshAllTemplates
  /lcp-templates/{id}:
    get:
      tags:
      - catalog-lcp-template-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogLcpTemplate'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_15
      summary: getById
  /offer-labels:
    get:
      tags:
      - catalog-offer-label-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_15
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogOfferLabel'
      tags:
      - catalog-offer-label-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_14
      summary: save
  /offer-labels/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogOfferLabel'
      tags:
      - catalog-offer-label-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_13
      summary: saveAll
    delete:
      tags:
      - catalog-offer-label-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_13
      summary: deleteAll
  /offer-labels/{id}:
    get:
      tags:
      - catalog-offer-label-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_16
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogOfferLabel'
      tags:
      - catalog-offer-label-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_13
      summary: update
    delete:
      tags:
      - catalog-offer-label-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_13
      summary: delete
  /offer-labels/{id}/duplicate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogOfferLabel'
      tags:
      - catalog-offer-label-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: form
        name: attachToAll
        description: attachToAll
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogOfferLabel'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: duplicateUsingPOST
      summary: duplicate
  /offer-labels/full:
    get:
      tags:
      - catalog-offer-label-view-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogOfferLabelDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_16
      summary: getAll
  /offer-labels/{id}/full:
    get:
      tags:
      - catalog-offer-label-view-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogOfferLabelDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_17
      summary: getById
  /tariff-plan-details/{id}:
    get:
      tags:
      - catalog-offer-tariff-plan-details-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TariffPlanDetailsDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_18
      summary: getById
  /tariff-plan-details/{id}/country/{mcc}:
    get:
      tags:
      - catalog-offer-tariff-plan-details-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: simple
        name: mcc
        description: mcc
        schema:
          format: int32
          type: integer
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TariffPlanDetailsDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByCountryUsingGET
      summary: getByCountry
  /rating-parameters-groups:
    get:
      tags:
      - catalog-parameter-group-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogParameterGroup'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_17
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogParameterGroup'
      tags:
      - catalog-parameter-group-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogParameterGroup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_15
      summary: save
  /rating-parameters-groups/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogParameterGroup'
      tags:
      - catalog-parameter-group-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogParameterGroup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_14
      summary: saveAll
    delete:
      tags:
      - catalog-parameter-group-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogParameterGroup'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_14
      summary: deleteAll
  /rating-parameters-groups/{id}:
    get:
      tags:
      - catalog-parameter-group-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogParameterGroup'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_19
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogParameterGroup'
      tags:
      - catalog-parameter-group-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogParameterGroup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_14
      summary: update
    delete:
      tags:
      - catalog-parameter-group-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogParameterGroup'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_14
      summary: delete
  /price-items:
    get:
      tags:
      - catalog-price-item-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogPriceItem'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_18
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogPriceItem'
      tags:
      - catalog-price-item-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogPriceItem'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_16
      summary: save
  /price-items/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogPriceItem'
      tags:
      - catalog-price-item-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogPriceItem'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_15
      summary: saveAll
    delete:
      tags:
      - catalog-price-item-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogPriceItem'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_15
      summary: deleteAll
  /price-items/{id}:
    get:
      tags:
      - catalog-price-item-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogPriceItem'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_20
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogPriceItem'
      tags:
      - catalog-price-item-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogPriceItem'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_15
      summary: update
    delete:
      tags:
      - catalog-price-item-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogPriceItem'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_15
      summary: delete
  /products:
    get:
      tags:
      - catalog-product-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProduct'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_19
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProduct'
      tags:
      - catalog-product-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProduct'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_17
      summary: save
  /products/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogProduct'
      tags:
      - catalog-product-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProduct'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_16
      summary: saveAll
    delete:
      tags:
      - catalog-product-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProduct'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_16
      summary: deleteAll
  /products/{id}:
    get:
      tags:
      - catalog-product-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProduct'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_21
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProduct'
      tags:
      - catalog-product-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProduct'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_16
      summary: update
    delete:
      tags:
      - catalog-product-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProduct'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_16
      summary: delete
  /product-offerings:
    get:
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_20
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProductOffering'
      tags:
      - catalog-product-offering-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_18
      summary: save
  /product-offerings/bulk:
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogProductOffering'
      tags:
      - catalog-product-offering-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateAllUsingPUT
      summary: updateAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogProductOffering'
      tags:
      - catalog-product-offering-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_17
      summary: saveAll
    delete:
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_17
      summary: deleteAll
  /product-offerings/search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityCompatibilityData'
      tags:
      - eligibility-and-compatibility-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: isIndividualMode
        description: isIndividualMode
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        explode: true
        name: labels
        description: labels
        schema:
          format: uuid
          type: string
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: searchEligibleAndCompatibleOffersUsingPOST
      summary: Eligibility and compatibility search
  /product-offerings/search/balance-type:
    get:
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: form
        name: balanceType
        description: balanceType
        schema:
          enum:
          - POSTPAID
          - PREPAID
          type: string
        in: query
        required: true
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: filterByBalanceTypeUsingGET
      summary: filterByBalanceType
  /product-offerings/{id}:
    get:
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_22
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProductOffering'
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_17
      summary: update
    delete:
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_18
      summary: delete
  /product-offerings/{id}/validate-delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: validateDeleteUsingPOST
      summary: validateDelete
    delete:
      tags:
      - catalog-product-offering-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_17
      summary: delete
  /product-offerings/full:
    get:
      tags:
      - catalog-product-offering-full-view-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProductOfferingDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_21
      summary: getAll
  /product-offerings/{id}/full:
    get:
      tags:
      - catalog-product-offering-full-view-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOfferingDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getUsingGET
      summary: get
  /product-offerings/{id}/full/nested/services:
    get:
      tags:
      - catalog-product-offering-full-view-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductOfferingWithNestedService'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getNestedServicesUsingGET
      summary: getNestedServices
  /providers:
    get:
      tags:
      - catalog-provider-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProvider'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_22
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProvider'
      tags:
      - catalog-provider-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProvider'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_19
      summary: save
  /providers/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogProvider'
      tags:
      - catalog-provider-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProvider'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_18
      summary: saveAll
    delete:
      tags:
      - catalog-provider-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProvider'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_18
      summary: deleteAll
  /providers/{id}:
    get:
      tags:
      - catalog-provider-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProvider'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_23
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProvider'
      tags:
      - catalog-provider-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProvider'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_18
      summary: update
    delete:
      tags:
      - catalog-provider-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProvider'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_19
      summary: delete
  /rating-parameters:
    get:
      tags:
      - catalog-rating-parameter-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogRatingParameter'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_23
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRatingParameter'
      tags:
      - catalog-rating-parameter-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameter'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_20
      summary: save
  /rating-parameters/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogRatingParameter'
      tags:
      - catalog-rating-parameter-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogRatingParameter'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_19
      summary: saveAll
    delete:
      tags:
      - catalog-rating-parameter-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogRatingParameter'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_19
      summary: deleteAll
  /rating-parameters/{id}:
    get:
      tags:
      - catalog-rating-parameter-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameter'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_24
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRatingParameter'
      tags:
      - catalog-rating-parameter-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameter'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_19
      summary: update
    delete:
      tags:
      - catalog-rating-parameter-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameter'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_20
      summary: delete
  /rating-parameter-sets:
    get:
      tags:
      - catalog-rating-parameter-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogRatingParameterSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_24
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRatingParameterSet'
      tags:
      - catalog-rating-parameter-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameterSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_21
      summary: save
  /rating-parameter-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogRatingParameterSet'
      tags:
      - catalog-rating-parameter-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogRatingParameterSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_20
      summary: saveAll
    delete:
      tags:
      - catalog-rating-parameter-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogRatingParameterSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_20
      summary: deleteAll
  /rating-parameter-sets/{id}:
    get:
      tags:
      - catalog-rating-parameter-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameterSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_25
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRatingParameterSet'
      tags:
      - catalog-rating-parameter-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameterSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_20
      summary: update
    delete:
      tags:
      - catalog-rating-parameter-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogRatingParameterSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_21
      summary: delete
  /services:
    get:
      tags:
      - catalog-service-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogService'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_25
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogService'
      tags:
      - catalog-service-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogService'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_22
      summary: save
  /services/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogService'
      tags:
      - catalog-service-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogService'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_21
      summary: saveAll
    delete:
      tags:
      - catalog-service-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogService'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_21
      summary: deleteAll
  /services/{id}:
    get:
      tags:
      - catalog-service-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogService'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_26
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogService'
      tags:
      - catalog-service-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogService'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_21
      summary: update
    delete:
      tags:
      - catalog-service-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogService'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_22
      summary: delete
  /tariffs:
    get:
      tags:
      - catalog-tariff-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariff'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_26
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogTariff'
      tags:
      - catalog-tariff-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariff'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_23
      summary: save
  /tariffs/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogTariff'
      tags:
      - catalog-tariff-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariff'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_22
      summary: saveAll
    delete:
      tags:
      - catalog-tariff-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariff'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_22
      summary: deleteAll
  /tariffs/{id}:
    get:
      tags:
      - catalog-tariff-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariff'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_27
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogTariff'
      tags:
      - catalog-tariff-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariff'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_22
      summary: update
    delete:
      tags:
      - catalog-tariff-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariff'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_23
      summary: delete
  /tariff-plans:
    get:
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_27
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogTariffPlan'
      tags:
      - catalog-tariff-plan-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_24
      summary: save
  /tariff-plans/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogTariffPlan'
      tags:
      - catalog-tariff-plan-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_23
      summary: saveAll
    delete:
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_23
      summary: deleteAll
  /tariff-plans/individual-tariff-plan:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualTariffPlanDto'
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: form
        name: productOfferingId
        description: productOfferingId
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: processIndividualTariffPlanUsingPOST
      summary: processIndividualTariffPlan
  /tariff-plans/{id}:
    get:
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_28
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogTariffPlan'
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_23
      summary: update
    delete:
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_24
      summary: delete
  /tariff-plans/{id}/download:
    get:
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: downloadFileUsingGET_1
      summary: downloadFile
  /tariff-plans/{id}/upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  format: binary
                  description: file
                  type: string
      tags:
      - catalog-tariff-plan-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffPlan'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: uploadFileUsingPOST_1
      summary: uploadFile
  /tariffs/{parentId}/steps:
    get:
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_28
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogTariffStep'
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_25
      summary: save
  /tariffs/{parentId}/steps/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogTariffStep'
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_24
      summary: saveAll
    delete:
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_24
      summary: deleteAll
  /tariffs/{parentId}/steps/{id}:
    get:
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_29
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogTariffStep'
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_24
      summary: update
    delete:
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: simple
        name: parentId
        description: parentId
        schema:
          format: uuid
          type: string
        in: path
        required: true
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_25
      summary: delete
  /compatibility-sets:
    get:
      tags:
      - compatibility-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompatibilitySet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_29
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompatibilitySet'
      tags:
      - compatibility-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompatibilitySet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_26
      summary: save
  /compatibility-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompatibilitySet'
      tags:
      - compatibility-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompatibilitySet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_25
      summary: saveAll
    delete:
      tags:
      - compatibility-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompatibilitySet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_25
      summary: deleteAll
  /compatibility-sets/{id}:
    get:
      tags:
      - compatibility-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompatibilitySet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_30
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompatibilitySet'
      tags:
      - compatibility-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompatibilitySet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_25
      summary: update
    delete:
      tags:
      - compatibility-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompatibilitySet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_26
      summary: delete
  /currencies:
    get:
      tags:
      - currency-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_30
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      tags:
      - currency-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: createUsingPOST
      summary: create
  /currencies/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      tags:
      - currency-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_26
      summary: saveAll
  /currencies/upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  format: binary
                  description: file
                  type: string
      tags:
      - currency-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_27
      summary: saveAll
  /currencies/{id}:
    get:
      tags:
      - currency-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_31
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      tags:
      - currency-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_26
      summary: update
    delete:
      tags:
      - currency-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_27
      summary: delete
  /eligibility-sets:
    get:
      tags:
      - eligibility-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilitySet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_31
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilitySet'
      tags:
      - eligibility-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_27
      summary: save
  /eligibility-sets/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EligibilitySet'
      tags:
      - eligibility-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilitySet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_28
      summary: saveAll
    delete:
      tags:
      - eligibility-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilitySet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_26
      summary: deleteAll
  /eligibility-sets/{id}:
    get:
      tags:
      - eligibility-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_32
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilitySet'
      tags:
      - eligibility-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_27
      summary: update
    delete:
      tags:
      - eligibility-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_28
      summary: delete
  /eligibility-set-schemas:
    get:
      tags:
      - eligibility-set-schema-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilitySetSchema'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_32
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilitySetSchema'
      tags:
      - eligibility-set-schema-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySetSchema'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_28
      summary: save
  /eligibility-set-schemas/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EligibilitySetSchema'
      tags:
      - eligibility-set-schema-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilitySetSchema'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_29
      summary: saveAll
    delete:
      tags:
      - eligibility-set-schema-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilitySetSchema'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_27
      summary: deleteAll
  /eligibility-set-schemas/schema:
    get:
      tags:
      - eligibility-set-schema-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: uuid
                type: string
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getSystemSchemaIdUsingGET
      summary: getSystemSchemaId
  /eligibility-set-schemas/{id}:
    get:
      tags:
      - eligibility-set-schema-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySetSchema'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_33
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilitySetSchema'
      tags:
      - eligibility-set-schema-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySetSchema'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_28
      summary: update
    delete:
      tags:
      - eligibility-set-schema-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EligibilitySetSchema'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_29
      summary: delete
  /exchange-rates:
    get:
      tags:
      - exchange-rate-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_33
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRate'
      tags:
      - exchange-rate-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_29
      summary: save
  /exchange-rates/active:
    get:
      tags:
      - exchange-rate-controller
      parameters:
      - style: form
        name: currencyId
        description: currencyId
        schema:
          type: string
        in: query
        required: true
      - style: form
        name: realm
        description: realm
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: datetime
        description: datetime
        schema:
          format: date-time
          type: string
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getActiveRateUsingGET
      summary: getActiveRate
  /exchange-rates/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExchangeRate'
      tags:
      - exchange-rate-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_30
      summary: saveAll
    delete:
      tags:
      - exchange-rate-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_28
      summary: deleteAll
  /exchange-rates/upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  format: binary
                  description: file
                  type: string
      tags:
      - exchange-rate-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: uploadFileUsingPOST_2
      summary: uploadFile
  /exchange-rates/{id}:
    get:
      tags:
      - exchange-rate-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_34
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRate'
      tags:
      - exchange-rate-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_29
      summary: update
    delete:
      tags:
      - exchange-rate-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeRate'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_30
      summary: delete
  /offerings/individual:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualOfferDto'
      tags:
      - individual-offer-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOfferingDto'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: createUsingPOST_2
      summary: create
  /offerings/individual/with_params:
    post:
      tags:
      - individual-offer-controller
      parameters:
      - style: form
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: query
        required: true
      - style: form
        name: subscriberId
        description: subscriberId
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductOffering'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: createUsingPOST_1
      summary: create
  /layout-rating-parameters-groups:
    get:
      tags:
      - layout-rating-parameters-group-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LayoutRatingParametersGroup'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_34
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayoutRatingParametersGroup'
      tags:
      - layout-rating-parameters-group-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LayoutRatingParametersGroup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_30
      summary: save
  /layout-rating-parameters-groups/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LayoutRatingParametersGroup'
      tags:
      - layout-rating-parameters-group-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LayoutRatingParametersGroup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_31
      summary: saveAll
    delete:
      tags:
      - layout-rating-parameters-group-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LayoutRatingParametersGroup'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_29
      summary: deleteAll
  /layout-rating-parameters-groups/{id}:
    get:
      tags:
      - layout-rating-parameters-group-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LayoutRatingParametersGroup'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_35
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayoutRatingParametersGroup'
      tags:
      - layout-rating-parameters-group-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LayoutRatingParametersGroup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_30
      summary: update
    delete:
      tags:
      - layout-rating-parameters-group-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LayoutRatingParametersGroup'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_31
      summary: delete
  /lookups:
    get:
      tags:
      - lookup-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lookup'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_35
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lookup'
      tags:
      - lookup-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Lookup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_31
      summary: save
  /lookups/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Lookup'
      tags:
      - lookup-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lookup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_32
      summary: saveAll
  /lookups/move:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupMovingDto'
      tags:
      - lookup-controller
      parameters:
      - style: form
        name: isDirect
        description: isDirect
        schema:
          type: boolean
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Lookup'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: moveUsingPOST
      summary: move
  /lookups/{id}:
    get:
      tags:
      - lookup-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Lookup'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_36
      summary: getById
    delete:
      tags:
      - lookup-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Lookup'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_32
      summary: delete
  /offerings/view/{id}:
    get:
      tags:
      - product-offering-view-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductOfferingView'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getViewByIdUsingGET
      summary: getViewById
  /tariffs/steps/{id}:
    get:
      tags:
      - catalog-tariff-step-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogTariffStep'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_37
      summary: getById
  /xdays-offer/expiration-list:
    get:
      tags:
      - x-days-offer-action-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XDaysOfferActionDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getXDaysOfferExpirationListUsingGET
      summary: getXDaysOfferExpirationList
  /xdays-offer/renewal-list:
    get:
      tags:
      - x-days-offer-action-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XDaysOfferActionDto'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getXDaysOfferRenewalListUsingGET
      summary: getXDaysOfferRenewalList
  /zone:
    get:
      tags:
      - zone-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZone'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_36
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogZone'
      tags:
      - zone-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZone'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_32
      summary: save
  /zone/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogZone'
      tags:
      - zone-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZone'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_33
      summary: saveAll
    delete:
      tags:
      - zone-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZone'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_30
      summary: deleteAll
  /zone/eligible:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      tags:
      - zone-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: isSystem
        description: isSystem
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZone'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getEligibleZonesUsingPOST
      summary: getEligibleZones
  /zone/eligible/{id}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      tags:
      - zone-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: isSystem
        description: isSystem
        schema:
          type: boolean
        in: query
        required: false
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZone'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getEligibleZoneByIdUsingPOST
      summary: getEligibleZoneById
  /zone/{id}:
    get:
      tags:
      - zone-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZone'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_38
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogZone'
      tags:
      - zone-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZone'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_31
      summary: update
    delete:
      tags:
      - zone-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZone'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_33
      summary: delete
  /zoneset:
    get:
      tags:
      - zone-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: search
        description: search
        schema:
          type: string
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getAllUsingGET_37
      summary: getAll
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogZoneSet'
      tags:
      - zone-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveUsingPOST_33
      summary: save
  /zoneset/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogZoneSet'
      tags:
      - zone-set-controller
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: saveAllUsingPOST_34
      summary: saveAll
    delete:
      tags:
      - zone-set-controller
      parameters:
      - style: form
        explode: true
        name: ids
        description: ids
        schema:
          format: uuid
          type: string
        in: query
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteAllUsingDELETE_31
      summary: deleteAll
  /zoneset/eligible:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      tags:
      - zone-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getEligibleZonesetsUsingPOST
      summary: getEligibleZonesets
  /zoneset/eligible/{id}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      tags:
      - zone-set-controller
      parameters:
      - style: form
        name: offset
        schema:
          format: int64
          type: integer
        in: query
        required: false
      - style: form
        name: pageNumber
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: pageSize
        schema:
          format: int32
          type: integer
        in: query
        required: false
      - style: form
        name: paged
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.sorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: sort.unsorted
        schema:
          type: boolean
        in: query
        required: false
      - style: form
        name: unpaged
        schema:
          type: boolean
        in: query
        required: false
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getEligibleZonesetByIdUsingPOST
      summary: getEligibleZonesetById
  /zoneset/{id}:
    get:
      tags:
      - zone-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: getByIdUsingGET_39
      summary: getById
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogZoneSet'
      tags:
      - zone-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      operationId: updateUsingPUT_32
      summary: update
    delete:
      tags:
      - zone-set-controller
      parameters:
      - style: simple
        name: id
        description: id
        schema:
          format: uuid
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogZoneSet'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: deleteUsingDELETE_34
      summary: delete
components:
  schemas:
    ActionTrigger:
      title: ActionTrigger
      required:
      - createdDate
      - hasValue
      - id
      - isDeleted
      - isSystem
      - name
      - type
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        hasValue:
          type: boolean
        id:
          enum:
          - AGGREGATOR_ABOVE_THRESHOLD_X
          - ALLOWANCE_ALLOCATED
          - BALANCE_ABOVE_THRESHOLD_X
          - BALANCE_BELOW_THRESHOLD_X
          - BALANCE_DEPLETION
          - BALANCE_EXPIRED
          - BALANCE_TOP_UP
          - OFFER_ALLOCATED
          - OFFER_DE_ALLOCATED
          - OFFER_FIRST_CHARGE
          - OFFER_RENEWAL_FAILED
          - OFFER_RENEWED
          - X_DAYS_BEFORE_BALANCE_EXPIRATION
          - X_DAYS_BEFORE_OFFER_EXPIRATION
          - X_DAYS_BEFORE_OFFER_RENEWAL
          type: string
        isDeleted:
          type: boolean
        isSystem:
          type: boolean
        name:
          type: string
        type:
          enum:
          - BALANCE
          - OFFER
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        valueType:
          type: array
          items:
            type: string
    CalendarView:
      title: CalendarView
      required:
      - id
      - name
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
    CatalogBalanceDto:
      title: CatalogBalanceDto
      required:
      - id
      - isExternal
      - isVirtual
      - maximumBalance
      - minimumBalance
      - type
      type: object
      properties:
        currencyId:
          type: string
        description:
          type: string
        id:
          format: uuid
          type: string
        isExternal:
          type: boolean
        isVirtual:
          type: boolean
        maximumBalance:
          format: int64
          type: integer
        minimumBalance:
          format: int64
          type: integer
        name:
          type: string
        type:
          type: string
    CatalogCalendarProperties:
      title: CatalogCalendarProperties
      required:
      - catalogCalendarId
      - createdDate
      - domFrom
      - dowFrom
      - isDeleted
      - monthFrom
      - name
      - yearFrom
      type: object
      properties:
        catalogCalendarId:
          format: uuid
          type: string
        color:
          type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        domFrom:
          format: int32
          type: integer
        domTo:
          format: int32
          type: integer
        dowFrom:
          format: int32
          type: integer
        dowTo:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        monthFrom:
          format: int32
          type: integer
        monthTo:
          format: int32
          type: integer
        name:
          type: string
        special:
          type: boolean
        timeFrom:
          type: string
          example: HH:mm:ss
        timeTo:
          type: string
          example: HH:mm:ss
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        version:
          format: int64
          type: integer
        yearFrom:
          format: int32
          type: integer
        yearTo:
          format: int32
          type: integer
    CatalogLimit:
      title: CatalogLimit
      required:
      - currency
      - value
      type: object
      properties:
        currency:
          type: string
        id:
          format: uuid
          type: string
        value:
          format: int64
          type: integer
    CatalogLimitView:
      title: CatalogLimitView
      type: object
      properties:
        currency:
          type: string
        value:
          format: int64
          type: integer
    CatalogOfferLabelDto:
      title: CatalogOfferLabelDto
      required:
      - id
      - name
      - offers
      - realm
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        offers:
          type: array
          items:
            $ref: '#/components/schemas/OfferData'
        realm:
          type: string
    CatalogOfferPoolPlan:
      title: CatalogOfferPoolPlan
      required:
      - type
      type: object
      properties:
        maxSubscribers:
          format: int32
          type: integer
        type:
          enum:
          - ACCUMULATIVE
          - FIXED
          type: string
    CatalogOfferPrice:
      title: CatalogOfferPrice
      required:
      - currencyId
      - realm
      - value
      type: object
      properties:
        currencyId:
          type: string
        id:
          format: uuid
          type: string
        realm:
          type: string
        value:
          format: int64
          type: integer
    CatalogOfferTerm:
      title: CatalogOfferTerm
      required:
      - allowanceRenewalStrategy
      - effectiveDateFrom
      - isRemoveAfterBalanceDepletion
      - offerPriority
      - offerRenewalStrategy
      - realm
      - type
      type: object
      properties:
        allowance:
          format: int64
          type: integer
        allowanceRenewalStrategy:
          enum:
          - INCREMENT
          - OVERRIDE
          type: string
        currencyId:
          type: string
        effectiveDateFrom:
          format: date-time
          type: string
        effectiveDateTo:
          format: date-time
          type: string
        expirationPeriod:
          $ref: '#/components/schemas/ExpirationPeriod'
        id:
          format: uuid
          type: string
        isRemoveAfterBalanceDepletion:
          type: boolean
        offerPriority:
          format: int32
          type: integer
        offerRenewalStrategy:
          enum:
          - FIRST_EVENT_NON_PERIODIC
          - FIRST_EVENT_PERIODIC
          - REGULAR
          type: string
        realm:
          type: string
        recurringType:
          $ref: '#/components/schemas/CatalogRecurringType'
        tariffPlanId:
          format: uuid
          type: string
        type:
          enum:
          - DISCOUNT
          - POOL_PLAN
          - RATING
          - TAX
          type: string
    CatalogOfferTermDto:
      title: CatalogOfferTermDto
      required:
      - allowanceRenewalStrategy
      - effectiveDateFrom
      - isRemoveAfterBalanceDepletion
      - offerPriority
      - offerRenewalStrategy
      - realm
      - type
      type: object
      properties:
        allowance:
          format: int64
          type: integer
        allowanceRenewalStrategy:
          enum:
          - INCREMENT
          - OVERRIDE
          type: string
        effectiveDateFrom:
          format: date-time
          type: string
        effectiveDateTo:
          format: date-time
          type: string
        id:
          format: uuid
          type: string
        isRemoveAfterBalanceDepletion:
          type: boolean
        offerPriority:
          format: int32
          type: integer
        offerRenewalStrategy:
          enum:
          - FIRST_EVENT_NON_PERIODIC
          - FIRST_EVENT_PERIODIC
          - REGULAR
          type: string
        realm:
          type: string
        recurringType:
          $ref: '#/components/schemas/CatalogRecurringType'
        tariffPlanId:
          format: uuid
          type: string
        type:
          enum:
          - DISCOUNT
          - POOL_PLAN
          - RATING
          - TAX
          type: string
    CatalogPriceItem:
      title: CatalogPriceItem
      required:
      - createdDate
      - isDeleted
      - name
      - realm
      - value
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        currencyId:
          type: string
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        value:
          format: int64
          type: integer
        version:
          format: int64
          type: integer
    CatalogProductDto:
      title: CatalogProductDto
      required:
      - id
      - name
      type: object
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
    CatalogProductOffering:
      title: CatalogProductOffering
      required:
      - compatibilitySetIds
      - createdDate
      - isDeleted
      - isIndividual
      - isOffered
      - isPrimary
      - linkedOffers
      - name
      - nestedProductOfferIds
      - offerLabelIds
      - parentProductOffers
      - realm
      - type
      type: object
      properties:
        actionSetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        cardinality:
          format: int32
          type: integer
        compatibilitySetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        customFields:
          type: object
          additionalProperties:
            type: object
        description:
          type: string
        eligibilitySetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        isIndividual:
          type: boolean
        isOffered:
          type: boolean
        isPrimary:
          type: boolean
        limit:
          $ref: '#/components/schemas/CatalogLimit'
        linkedOffers:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        nestedProductOfferIds:
          type: array
          items:
            format: uuid
            type: string
        offerLabelIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        offerTerm:
          $ref: '#/components/schemas/CatalogOfferTerm'
        parentProductOffers:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        periodicBalanceId:
          format: uuid
          type: string
        poolPlan:
          $ref: '#/components/schemas/CatalogOfferPoolPlan'
        price:
          $ref: '#/components/schemas/CatalogOfferPrice'
        productId:
          format: uuid
          type: string
        realm:
          type: string
        type:
          enum:
          - BUNDLE_PRODUCT_OFFERING
          - SIMPLE_PRODUCT_OFFERING
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        usageBalanceId:
          format: uuid
          type: string
    CatalogProductOfferingDto:
      title: CatalogProductOfferingDto
      required:
      - compatibilitySetIds
      - createdDate
      - eligibilitySetIds
      - id
      - isDeleted
      - isIndividual
      - isOffered
      - isPrimary
      - labels
      - linkedOffers
      - name
      - nestedProductOffers
      - realm
      - type
      type: object
      properties:
        cardinality:
          format: int32
          type: integer
        compatibilitySetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        customFields:
          type: object
          additionalProperties:
            type: object
        description:
          type: string
        eligibilitySetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        isIndividual:
          type: boolean
        isOffered:
          type: boolean
        isPrimary:
          type: boolean
        labels:
          type: array
          items:
            $ref: '#/components/schemas/CatalogOfferLabelDto'
        limit:
          $ref: '#/components/schemas/CatalogLimit'
        linkedOffers:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        nestedProductOffers:
          type: array
          items:
            $ref: '#/components/schemas/SimpleProductOfferingDto'
        offerTerm:
          $ref: '#/components/schemas/CatalogOfferTermDto'
        periodicBalance:
          $ref: '#/components/schemas/CatalogBalanceDto'
        price:
          $ref: '#/components/schemas/CatalogOfferPrice'
        productId:
          format: uuid
          type: string
        realm:
          type: string
        type:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        usageBalance:
          $ref: '#/components/schemas/CatalogBalanceDto'
    CatalogRecurringType:
      title: CatalogRecurringType
      required:
      - isCalendar
      - isProrated
      - realm
      - type
      - units
      - value
      type: object
      properties:
        id:
          format: uuid
          type: string
        isCalendar:
          type: boolean
        isProrated:
          type: boolean
        realm:
          type: string
        type:
          enum:
          - ANNUALLY
          - DAILY
          - MONTHLY
          - ONE_TIME
          - QUARTERLY
          - SEMI_ANNUALLY
          - WEEKLY
          type: string
        units:
          format: int64
          type: integer
        value:
          format: int64
          type: integer
    CatalogTariff:
      title: CatalogTariff
      required:
      - createdDate
      - isDeleted
      - isIndividual
      - isSystem
      - name
      - realm
      - steps
      - type
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isAdaptive:
          type: boolean
        isDeleted:
          type: boolean
        isIndividual:
          type: boolean
        isSystem:
          type: boolean
        name:
          type: string
        realm:
          type: string
        steps:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogTariffStep'
        type:
          enum:
          - ACCOUNT_ROLLOVER
          - BLOCK
          - DISCOUNT
          - FREE
          - MARGIN
          - PARENT_ROLLOVER
          - PASS
          - REGULAR
          - ROLLOVER
          - TAX
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        version:
          format: int64
          type: integer
    CatalogTariffStep:
      title: CatalogTariffStep
      required:
      - createdDate
      - isDeleted
      - name
      - priceItem
      - step
      type: object
      properties:
        catalogTariff:
          $ref: '#/components/schemas/CatalogTariff'
        catalogTariffId:
          format: uuid
          type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        currencyId:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        nextStep:
          format: int32
          type: integer
        priceItem:
          $ref: '#/components/schemas/CatalogPriceItem'
        repetitions:
          format: int32
          type: integer
        step:
          format: int32
          type: integer
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        value:
          format: int64
          type: integer
        version:
          format: int64
          type: integer
    CustomListView:
      title: CustomListView
      required:
      - id
      - name
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
    DeleteTariffPlanEntryDto:
      title: DeleteTariffPlanEntryDto
      type: object
      properties:
        layout:
          type: array
          items:
            type: string
    EligibilityCompatibilityData:
      title: EligibilityCompatibilityData
      type: object
      properties:
        eligibilityData:
          type: object
          additionalProperties:
            type: object
        offerIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
    ExpirationPeriod:
      title: ExpirationPeriod
      required:
      - realm
      - type
      - units
      type: object
      properties:
        id:
          format: uuid
          type: string
        realm:
          type: string
        type:
          enum:
          - DAYS
          - HALF_YEARS
          - MONTHS
          - QUARTERS
          - WEEKS
          - YEARS
          type: string
        units:
          format: int32
          type: integer
    ExternalLcpTemplateDto:
      title: ExternalLcpTemplateDto
      required:
      - id
      - name
      - states
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        states:
          uniqueItems: true
          type: array
          items:
            type: string
    IndividualEligibilityDto:
      title: IndividualEligibilityDto
      required:
      - customerAccountId
      type: object
      properties:
        customerAccountId:
          format: uuid
          type: string
        planType:
          type: string
    IndividualNestedOfferDto:
      title: IndividualNestedOfferDto
      type: object
      properties:
        allowance:
          format: bigdecimal
          type: number
        allowanceRenewalStrategy:
          type: string
        currency:
          type: string
        customFields:
          type: object
          additionalProperties:
            type: object
        id:
          format: uuid
          type: string
        limit:
          $ref: '#/components/schemas/OfferLimit'
        poolPlan:
          $ref: '#/components/schemas/IndividualOfferPoolPlanDto'
        seniority:
          format: int32
          type: integer
        usageBalanceId:
          format: uuid
          type: string
    IndividualOfferDto:
      title: IndividualOfferDto
      required:
      - individualEligibility
      - offerTemplateId
      type: object
      properties:
        cardinality:
          format: int32
          type: integer
        customFields:
          type: object
          additionalProperties:
            type: object
        description:
          type: string
        id:
          format: uuid
          type: string
        individualEligibility:
          $ref: '#/components/schemas/IndividualEligibilityDto'
        limit:
          $ref: '#/components/schemas/OfferLimit'
        linkedOffers:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        nestedOffers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IndividualNestedOfferDto'
        offerTemplateId:
          format: uuid
          type: string
        offerTerm:
          $ref: '#/components/schemas/IndividualOfferTermDto'
        periodicBalanceId:
          format: uuid
          type: string
        poolPlan:
          $ref: '#/components/schemas/IndividualOfferPoolPlanDto'
        price:
          $ref: '#/components/schemas/IndividualOfferPriceDto'
        usageBalanceId:
          format: uuid
          type: string
    IndividualOfferPoolPlanDto:
      title: IndividualOfferPoolPlanDto
      required:
      - type
      type: object
      properties:
        maxSubscribers:
          format: int32
          type: integer
        type:
          type: string
    IndividualOfferPriceDto:
      title: IndividualOfferPriceDto
      type: object
      properties:
        currency:
          type: string
        value:
          format: bigdecimal
          type: number
    IndividualOfferTermDto:
      title: IndividualOfferTermDto
      type: object
      properties:
        allowance:
          format: bigdecimal
          type: number
        allowanceRenewalStrategy:
          type: string
        currency:
          type: string
        effectiveDateFrom:
          type: string
        effectiveDateTo:
          type: string
        isRemoveAfterBalanceDepletion:
          type: boolean
        offerRenewalStrategy:
          type: string
        priority:
          format: int32
          type: integer
        recurringType:
          $ref: '#/components/schemas/IndividualRecurringTypeDto'
    IndividualRecurringTypeDto:
      title: IndividualRecurringTypeDto
      type: object
      properties:
        isCalendar:
          type: boolean
        isProrated:
          type: boolean
        type:
          type: string
        units:
          format: int64
          type: integer
        value:
          format: int64
          type: integer
    IndividualTariffPlanDto:
      title: IndividualTariffPlanDto
      required:
      - subscriberOfferId
      type: object
      properties:
        add:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/InsertTariffPlanEntryDto'
        delete:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DeleteTariffPlanEntryDto'
        edit:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateTariffPlanEntryDto'
        subscriberOfferId:
          format: uuid
          type: string
    InsertTariffPlanEntryDto:
      title: InsertTariffPlanEntryDto
      type: object
      properties:
        layout:
          type: array
          items:
            type: string
        position:
          format: int32
          type: integer
        tariff:
          type: array
          items:
            $ref: '#/components/schemas/TariffEntryDto'
    LayoutRatingParametersGroupView:
      title: LayoutRatingParametersGroupView
      required:
      - id
      - name
      type: object
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
    LayoutRatingParametersView:
      title: LayoutRatingParametersView
      required:
      - id
      - parameters
      - position
      - tags
      type: object
      properties:
        group:
          $ref: '#/components/schemas/LayoutRatingParametersGroupView'
        id:
          format: uuid
          type: string
        parameters:
          type: array
          items:
            type: string
        position:
          format: int32
          type: integer
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
    LayoutView:
      title: LayoutView
      required:
      - data
      - id
      - name
      type: object
      properties:
        data:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LayoutRatingParametersView'
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        ratingParameterSet:
          $ref: '#/components/schemas/RatingParameterSetView'
    LookupMovingDto:
      title: LookupMovingDto
      required:
      - fromRealm
      - fromSubscriberId
      - toRealm
      - toSubscriberId
      type: object
      properties:
        fromRealm:
          type: string
        fromSubscriberId:
          format: uuid
          type: string
        toRealm:
          type: string
        toSubscriberId:
          format: uuid
          type: string
    NestedProductOfferingDto:
      title: NestedProductOfferingDto
      required:
      - id
      - serviceId
      type: object
      properties:
        id:
          format: uuid
          type: string
        serviceId:
          format: uuid
          type: string
    OfferData:
      title: OfferData
      required:
      - id
      - name
      type: object
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
    OfferLimit:
      title: OfferLimit
      type: object
      properties:
        currency:
          type: string
        value:
          format: bigdecimal
          type: number
    OfferPriceView:
      title: OfferPriceView
      required:
      - currencyId
      - value
      type: object
      properties:
        currencyId:
          type: string
        id:
          format: uuid
          type: string
        value:
          format: int64
          type: integer
    OfferTermView:
      title: OfferTermView
      required:
      - allowanceRenewalStrategy
      - effectiveDateFrom
      - offerPriority
      - offerRenewalStrategy
      - type
      type: object
      properties:
        allowance:
          format: int64
          type: integer
        allowanceCurrency:
          type: string
        allowanceRenewalStrategy:
          enum:
          - INCREMENT
          - OVERRIDE
          type: string
        effectiveDateFrom:
          format: date-time
          type: string
        effectiveDateTo:
          format: date-time
          type: string
        expirationPeriodType:
          type: string
        expirationPeriodUnits:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        offerPriority:
          format: int32
          type: integer
        offerRenewalStrategy:
          enum:
          - FIRST_EVENT_NON_PERIODIC
          - FIRST_EVENT_PERIODIC
          - REGULAR
          type: string
        recurringType:
          type: string
        tariffPlan:
          $ref: '#/components/schemas/TariffPlanView'
        type:
          type: string
    PriceItemDto:
      title: PriceItemDto
      required:
      - value
      type: object
      properties:
        currency:
          type: string
        value:
          format: int64
          type: integer
    PriceItemEntryDto:
      title: PriceItemEntryDto
      required:
      - value
      type: object
      properties:
        currency:
          type: string
        value:
          format: bigdecimal
          type: number
    PriceItemView:
      title: PriceItemView
      required:
      - id
      - name
      - value
      type: object
      properties:
        currencyId:
          type: string
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        value:
          format: int64
          type: integer
    ProductOfferingView:
      title: ProductOfferingView
      required:
      - id
      - isOffered
      - isPrimary
      - name
      - type
      type: object
      properties:
        cardinality:
          format: int32
          type: integer
        customFields:
          type: object
          additionalProperties:
            type: object
        description:
          type: string
        id:
          format: uuid
          type: string
        isOffered:
          type: boolean
        isPrimary:
          type: boolean
        limit:
          $ref: '#/components/schemas/CatalogLimitView'
        name:
          type: string
        offerTerm:
          $ref: '#/components/schemas/OfferTermView'
        price:
          $ref: '#/components/schemas/OfferPriceView'
        product:
          $ref: '#/components/schemas/ProductView'
        type:
          enum:
          - BUNDLE_PRODUCT_OFFERING
          - SIMPLE_PRODUCT_OFFERING
          type: string
    ProductOfferingWithNestedService:
      title: ProductOfferingWithNestedService
      required:
      - id
      - nestedProductOffers
      type: object
      properties:
        id:
          format: uuid
          type: string
        nestedProductOffers:
          type: array
          items:
            $ref: '#/components/schemas/NestedProductOfferingDto'
    ProductView:
      title: ProductView
      required:
      - id
      - isActive
      - name
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
        isActive:
          type: boolean
        name:
          type: string
        service:
          $ref: '#/components/schemas/ServiceView'
    ProviderView:
      title: ProviderView
      required:
      - codes
      - id
      - isDefault
      - name
      type: object
      properties:
        codes:
          uniqueItems: true
          type: array
          items:
            type: string
        id:
          format: uuid
          type: string
        isDefault:
          type: boolean
        name:
          type: string
    RatingParameterSetView:
      title: RatingParameterSetView
      required:
      - id
      - name
      - ratingParameter
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        ratingParameter:
          type: array
          items:
            $ref: '#/components/schemas/RatingParameterView'
    RatingParameterView:
      title: RatingParameterView
      required:
      - id
      - name
      type: object
      properties:
        customList:
          $ref: '#/components/schemas/CustomListView'
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
    ServiceView:
      title: ServiceView
      required:
      - id
      - name
      - providers
      - statuses
      type: object
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        providers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProviderView'
        statuses:
          uniqueItems: true
          type: array
          items:
            type: string
    SimpleProductOfferingDto:
      title: SimpleProductOfferingDto
      required:
      - name
      - type
      type: object
      properties:
        allowance:
          format: int64
          type: integer
        customFields:
          type: object
          additionalProperties:
            type: object
        id:
          format: uuid
          type: string
        limit:
          $ref: '#/components/schemas/CatalogLimit'
        name:
          type: string
        product:
          $ref: '#/components/schemas/CatalogProductDto'
        type:
          type: string
        usageBalance:
          $ref: '#/components/schemas/CatalogBalanceDto'
    TariffCalendarRangeView:
      title: TariffCalendarRangeView
      required:
      - position
      type: object
      properties:
        calendarPropertiesId:
          format: uuid
          type: string
        id:
          format: uuid
          type: string
        position:
          format: int32
          type: integer
        tariff:
          $ref: '#/components/schemas/TariffView'
    TariffDetailsDto:
      title: TariffDetailsDto
      required:
      - name
      - step
      - type
      type: object
      properties:
        name:
          type: string
        step:
          type: array
          items:
            $ref: '#/components/schemas/TariffStepDto'
        type:
          type: string
    TariffEntryDto:
      title: TariffEntryDto
      required:
      - type
      type: object
      properties:
        name:
          type: string
        step:
          $ref: '#/components/schemas/TariffStepEntryDto'
        type:
          type: string
    TariffPlanDetailsDto:
      title: TariffPlanDetailsDto
      required:
      - layout
      type: object
      properties:
        layout:
          type: array
          items:
            type: string
        tariff:
          $ref: '#/components/schemas/TariffDetailsDto'
    TariffPlanView:
      title: TariffPlanView
      required:
      - id
      - layout
      - name
      - ranges
      type: object
      properties:
        calendar:
          $ref: '#/components/schemas/CalendarView'
        description:
          type: string
        id:
          format: uuid
          type: string
        layout:
          $ref: '#/components/schemas/LayoutView'
        name:
          type: string
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/TariffCalendarRangeView'
    TariffStepDto:
      title: TariffStepDto
      required:
      - priceItem
      - value
      type: object
      properties:
        currency:
          type: string
        priceItem:
          $ref: '#/components/schemas/PriceItemDto'
        value:
          format: int64
          type: integer
    TariffStepEntryDto:
      title: TariffStepEntryDto
      required:
      - priceItem
      type: object
      properties:
        currency:
          type: string
        priceItem:
          $ref: '#/components/schemas/PriceItemEntryDto'
        repetitions:
          format: int32
          type: integer
        value:
          format: int64
          type: integer
    TariffStepView:
      title: TariffStepView
      required:
      - id
      - name
      - priceItem
      - step
      type: object
      properties:
        currencyId:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        nextStep:
          format: int32
          type: integer
        priceItem:
          $ref: '#/components/schemas/PriceItemView'
        repetitions:
          format: int32
          type: integer
        step:
          format: int32
          type: integer
        value:
          format: int64
          type: integer
    TariffView:
      title: TariffView
      required:
      - id
      - isSystem
      - name
      - steps
      - type
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
        isAdaptive:
          type: boolean
        isSystem:
          type: boolean
        name:
          type: string
        steps:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TariffStepView'
        type:
          enum:
          - ACCOUNT_ROLLOVER
          - BLOCK
          - DISCOUNT
          - FREE
          - MARGIN
          - PARENT_ROLLOVER
          - PASS
          - REGULAR
          - ROLLOVER
          - TAX
          type: string
    Timestamp:
      title: Timestamp
      type: object
      properties:
        date:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
        hours:
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        nanos:
          format: int32
          type: integer
        seconds:
          format: int32
          type: integer
        time:
          format: int64
          type: integer
        timezoneOffset:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
    UpdateTariffPlanEntryDto:
      title: UpdateTariffPlanEntryDto
      type: object
      properties:
        layout:
          type: array
          items:
            type: string
        tariff:
          type: array
          items:
            $ref: '#/components/schemas/TariffEntryDto'
    XDaysOfferActionDto:
      title: XDaysOfferActionDto
      required:
      - actionId
      - catalogProductOfferingId
      - triggerValue
      type: object
      properties:
        actionId:
          format: uuid
          type: string
        catalogProductOfferingId:
          format: uuid
          type: string
        triggerValue:
          format: int64
          type: integer
    BonusStep:
      title: BonusStepRes
      required:
      - currency
      type: object
      properties:
        balanceId:
          format: uuid
          type: string
        bonus:
          $ref: '#/components/schemas/CatalogBillingBonus'
        currency:
          type: string
        from:
          format: bigdecimal
          type: number
        id:
          format: uuid
          type: string
        to:
          format: bigdecimal
          type: number
        value:
          format: bigdecimal
          type: number
    Action:
      title: ActionRes
      required:
      - commandType
      - createdDate
      - isDeleted
      - name
      - triggerId
      type: object
      properties:
        actionSet:
          $ref: '#/components/schemas/ActionSet'
        actionSetId:
          format: uuid
          type: string
        command:
          type: string
        commandType:
          enum:
          - ASYNC
          - SYNC
          type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        triggerId:
          enum:
          - AGGREGATOR_ABOVE_THRESHOLD_X
          - ALLOWANCE_ALLOCATED
          - BALANCE_ABOVE_THRESHOLD_X
          - BALANCE_BELOW_THRESHOLD_X
          - BALANCE_DEPLETION
          - BALANCE_EXPIRED
          - BALANCE_TOP_UP
          - OFFER_ALLOCATED
          - OFFER_DE_ALLOCATED
          - OFFER_FIRST_CHARGE
          - OFFER_RENEWAL_FAILED
          - OFFER_RENEWED
          - X_DAYS_BEFORE_BALANCE_EXPIRATION
          - X_DAYS_BEFORE_OFFER_EXPIRATION
          - X_DAYS_BEFORE_OFFER_RENEWAL
          type: string
        triggerValue:
          format: int64
          type: integer
        triggerValueUnit:
          enum:
          - INTEGER
          - PERCENTAGE
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    ActionSet:
      title: ActionSetRes
      required:
      - actions
      - createdDate
      - isDeleted
      - name
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogBalance:
      title: CatalogBalanceRes
      required:
      - createdDate
      - currencyId
      - isDeleted
      - isExternal
      - isVirtual
      - maximumBalance
      - minimumBalance
      - realm
      - type
      type: object
      properties:
        actionSetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        currencyId:
          type: string
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        isExternal:
          type: boolean
        isVirtual:
          type: boolean
        maximumBalance:
          format: int64
          type: integer
        minimumBalance:
          format: int64
          type: integer
        name:
          type: string
        realm:
          type: string
        type:
          enum:
          - POSTPAID
          - PREPAID
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogBillingAction:
      title: CatalogBillingActionRes
      required:
      - command
      - commandType
      - name
      type: object
      properties:
        billingActionSet:
          $ref: '#/components/schemas/CatalogBillingActionSet'
        command:
          type: string
        commandType:
          enum:
          - ASYNC
          - SYNC
          type: string
        description:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
    CatalogBillingActionSet:
      title: CatalogBillingActionSetRes
      required:
      - actions
      - createdDate
      - isDeleted
      - name
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/CatalogBillingAction'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogBillingBonus:
      title: CatalogBillingBonusRes
      required:
      - bonusSetIds
      - createdDate
      - entityIds
      - entityType
      - isDeleted
      - steps
      - type
      type: object
      properties:
        bonusSetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        entityIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        entityType:
          enum:
          - OFFER
          - PRODUCT
          - SERVICE
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/BonusStep'
        type:
          enum:
          - FIX
          - TIER
          type: string
        unitType:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogBillingBonusSet:
      title: CatalogBillingBonusSetRes
      required:
      - bonusIds
      - createdDate
      - isDeleted
      type: object
      properties:
        bonusIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogBillingDiscount:
      title: CatalogBillingDiscountRes
      required:
      - createdDate
      - discountSetIds
      - entityIds
      - entityType
      - isDeleted
      - steps
      - type
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        discountSetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        entityIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        entityType:
          enum:
          - OFFER
          - PRODUCT
          - SERVICE
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/DiscountStep'
        type:
          enum:
          - FIX
          - FIX_PERCENTAGE
          - TEAR
          - TEAR_PERCENTAGE
          type: string
        unitType:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogBillingDiscountSet:
      title: CatalogBillingDiscountSetRes
      required:
      - createdDate
      - discountIds
      - isDeleted
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        discountIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogBillingTax:
      title: CatalogBillingTaxRes
      required:
      - createdDate
      - isDeleted
      - taxSetIds
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        currency:
          type: string
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        taxSetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        value:
          format: bigdecimal
          type: number
    CatalogBillingTaxSet:
      title: CatalogBillingTaxSetRes
      required:
      - createdDate
      - isDeleted
      - taxIds
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        taxIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogCalendar:
      title: CatalogCalendarRes
      required:
      - createdDate
      - isDeleted
      - name
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        version:
          format: int64
          type: integer
    CatalogCustomList:
      title: CatalogCustomListRes
      required:
      - createdDate
      - isDeleted
      - name
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        list:
          type: array
          items:
            $ref: '#/components/schemas/CustomListItem'
        name:
          type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogLayout:
      title: CatalogLayoutRes
      required:
      - createdDate
      - data
      - isDeleted
      - isIndividual
      - name
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        data:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LayoutRatingParameters'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        isIndividual:
          type: boolean
        name:
          type: string
        ratingParameterSetId:
          format: uuid
          type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        version:
          format: int64
          type: integer
    CatalogLcpConfiguration:
      title: CatalogLcpConfigurationRes
      required:
      - createdDate
      - entityTypes
      - isDeleted
      - lcpTemplateId
      - name
      - rows
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        entityTypes:
          uniqueItems: true
          type: array
          items:
            enum:
            - ACCOUNT
            - SUBSCRIBER
            type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        lcpTemplateId:
          format: uuid
          type: string
        name:
          type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/LcpConfigurationRow'
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogLcpTemplate:
      title: CatalogLcpTemplateRes
      required:
      - createdDate
      - headers
      - isDeleted
      - name
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/LcpTemplateHeader'
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogOfferLabel:
      title: CatalogOfferLabelRes
      required:
      - createdDate
      - isDeleted
      - name
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogParameterGroup:
      title: CatalogParameterGroupRes
      required:
      - createdDate
      - isDeleted
      - name
      - parameters
      - realm
      - values
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        parameters:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        values:
          uniqueItems: true
          type: array
          items:
            type: string
    CatalogProduct:
      title: CatalogProductRes
      required:
      - createdDate
      - isActive
      - isDeleted
      - name
      - realm
      - serviceId
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        name:
          type: string
        providerId:
          format: uuid
          type: string
        realm:
          type: string
        serviceId:
          format: uuid
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogProvider:
      title: CatalogProviderRes
      required:
      - codes
      - createdDate
      - isDefault
      - isDeleted
      - name
      - products
      - realm
      - serviceIds
      type: object
      properties:
        alias:
          type: string
        codes:
          uniqueItems: true
          type: array
          items:
            type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        id:
          format: uuid
          type: string
        isDefault:
          type: boolean
        isDeleted:
          type: boolean
        name:
          type: string
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CatalogProduct'
        realm:
          type: string
        serviceIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogRatingParameter:
      title: CatalogRatingParameterRes
      required:
      - createdDate
      - isDeleted
      - name
      - parameterGroupIds
      - ratingParameterSetIds
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        customList:
          $ref: '#/components/schemas/CatalogCustomList'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        parameterGroupIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        ratingParameterSetIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogRatingParameterSet:
      title: CatalogRatingParameterSetRes
      required:
      - createdDate
      - isDeleted
      - name
      - ratingParameterIds
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        ratingParameterIds:
          type: array
          items:
            format: uuid
            type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogService:
      title: CatalogServiceRes
      required:
      - createdDate
      - isDeleted
      - name
      - providerIds
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        providerIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogTariffPlan:
      title: CatalogTariffPlanRes
      required:
      - createdDate
      - isDeleted
      - isIndividual
      - layoutId
      - name
      - ranges
      - realm
      type: object
      properties:
        calendarId:
          format: uuid
          type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        isIndividual:
          type: boolean
        layoutId:
          format: uuid
          type: string
        name:
          type: string
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/TariffCalendarRange'
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        version:
          format: int64
          type: integer
    CatalogZone:
      title: CatalogZoneRes
      required:
      - createdDate
      - eligibilitySet
      - isDeleted
      - isSystem
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        eligibilitySet:
          type: array
          items:
            format: uuid
            type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        isSystem:
          type: boolean
        layout:
          $ref: '#/components/schemas/CatalogLayout'
        name:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    CatalogZoneSet:
      title: CatalogZoneSetRes
      required:
      - createdDate
      - eligibilitySet
      - isDeleted
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        eligibilitySet:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
        zone:
          type: array
          items:
            $ref: '#/components/schemas/CatalogZone'
    CompatibilitySet:
      title: CompatibilitySetRes
      required:
      - createdDate
      - isDeleted
      - productOfferingIds
      - type
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        productOfferingIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        type:
          enum:
          - EXCLUSIVE
          - INCLUSIVE
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    Currency:
      title: CurrencyRes
      required:
      - id
      - name
      - type
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          enum:
          - MONETARY
          - NON_MONETARY_DURATION
          - NON_MONETARY_UNIT
          type: string
    CustomListItem:
      title: CustomListItemRes
      required:
      - key
      - position
      - value
      type: object
      properties:
        key:
          type: string
        position:
          format: int32
          type: integer
        value:
          type: string
    DiscountStep:
      title: DiscountStepRes
      type: object
      properties:
        currency:
          type: string
        discount:
          $ref: '#/components/schemas/CatalogBillingDiscount'
        from:
          format: bigdecimal
          type: number
        id:
          format: uuid
          type: string
        to:
          format: bigdecimal
          type: number
        value:
          format: bigdecimal
          type: number
    EligibilitySet:
      title: EligibilitySetRes
      required:
      - condition
      - createdDate
      - description
      - isDeleted
      - name
      type: object
      properties:
        condition:
          type: string
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          type: string
        expression:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        schemaId:
          format: uuid
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    EligibilitySetSchema:
      title: EligibilitySetSchemaRes
      required:
      - createdDate
      - isDeleted
      - isSystem
      - schema
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        isSystem:
          type: boolean
        schema:
          type: object
          additionalProperties:
            type: object
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    ExchangeRate:
      title: ExchangeRateRes
      required:
      - createdDate
      - currencyId
      - isDeleted
      - rate
      - realm
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        currencyId:
          type: string
        effectiveDateFrom:
          format: date-time
          type: string
        effectiveDateTo:
          format: date-time
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        providerId:
          format: uuid
          type: string
        rate:
          format: int64
          type: integer
        realm:
          type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    LayoutGroupItem:
      title: LayoutGroupItemRes
      required:
      - parameters
      - position
      - tags
      type: object
      properties:
        id:
          format: uuid
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/LayoutParameterItemDto'
        position:
          format: int32
          type: integer
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
    LayoutParameterItemDto:
      title: LayoutParameterItemDtoRes
      required:
      - value
      type: object
      properties:
        id:
          format: uuid
          type: string
        parameterGroupName:
          type: string
        value:
          type: string
    LayoutParameterItem:
      title: LayoutParameterItemRes
      required:
      - value
      type: object
      properties:
        id:
          format: uuid
          type: string
        parameterGroupName:
          type: string
        value:
          type: string
    LayoutRatingParametersGroup:
      title: LayoutRatingParametersGroupRes
      required:
      - createdDate
      - isDeleted
      - name
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/LayoutGroupItem'
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    LayoutRatingParameters:
      title: LayoutRatingParametersRes
      required:
      - createdDate
      - isDeleted
      - layoutIds
      - parameters
      - position
      - tags
      type: object
      properties:
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        group:
          $ref: '#/components/schemas/LayoutRatingParametersGroup'
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        layoutIds:
          uniqueItems: true
          type: array
          items:
            format: uuid
            type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/LayoutParameterItem'
        position:
          format: int32
          type: integer
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        updatedDate:
          $ref: '#/components/schemas/Timestamp'
    LcpConfigurationRow:
      title: LcpConfigurationRowRes
      required:
      - position
      - type
      - values
      type: object
      properties:
        entityId:
          format: uuid
          type: string
        id:
          format: uuid
          type: string
        lcpConfiguration:
          $ref: '#/components/schemas/CatalogLcpConfiguration'
        position:
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/LcpRowType'
        values:
          type: array
          items:
            $ref: '#/components/schemas/LcpConfigurationValue'
    LcpConfigurationValue:
      title: LcpConfigurationValueRes
      required:
      - position
      - state
      - value
      type: object
      properties:
        id:
          format: uuid
          type: string
        lcpConfigurationRow:
          $ref: '#/components/schemas/LcpConfigurationRow'
        position:
          format: int32
          type: integer
        state:
          type: string
        value:
          type: boolean
    LcpRowType:
      title: LcpRowTypeRes
      required:
      - name
      type: object
      properties:
        name:
          enum:
          - OFFER
          - PRODUCT
          - PROVIDER
          - RATING_FLOW
          - RENEWAL_FLOW
          - SERVICE
          - TOP_UP_FLOW
          type: string
        requiredId:
          type: boolean
    LcpTemplateHeader:
      title: LcpTemplateHeaderRes
      required:
      - name
      - position
      type: object
      properties:
        id:
          format: uuid
          type: string
        lcpTemplate:
          $ref: '#/components/schemas/CatalogLcpTemplate'
        name:
          type: string
        position:
          format: int32
          type: integer
    Lookup:
      title: LookupRes
      required:
      - isDeleted
      - key
      - module
      - realm
      - value
      type: object
      properties:
        effectiveDateFrom:
          format: date-time
          type: string
        effectiveDateTo:
          format: date-time
          type: string
        groupId:
          type: string
        id:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        key:
          type: string
        keyName:
          type: string
        module:
          type: string
        realm:
          type: string
        value:
          type: string
    TariffCalendarRangeListItem:
      title: TariffCalendarRangeListItemRes
      required:
      - position
      type: object
      properties:
        calendarPropertiesId:
          format: uuid
          type: string
        id:
          format: uuid
          type: string
        position:
          format: int32
          type: integer
    TariffCalendarRange:
      title: TariffCalendarRangeRes
      required:
      - tariffId
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/TariffCalendarRangeListItem'
        tariffId:
          format: uuid
          type: string
tags:
- name: action-set-controller
  description: Action Set Controller
- name: action-trigger-controller
  description: Action Trigger Controller
- name: basic-error-controller
  description: Basic Error Controller
- name: catalog-balance-controller
  description: Catalog Balance Controller
- name: catalog-billing-action-set-controller
  description: Catalog Billing Action Set Controller
- name: catalog-billing-bonus-controller
  description: Catalog Billing Bonus Controller
- name: catalog-billing-bonus-set-controller
  description: Catalog Billing Bonus Set Controller
- name: catalog-billing-discount-controller
  description: Catalog Billing Discount Controller
- name: catalog-billing-discount-set-controller
  description: Catalog Billing Discount Set Controller
- name: catalog-billing-tax-controller
  description: Catalog Billing Tax Controller
- name: catalog-billing-tax-set-controller
  description: Catalog Billing Tax Set Controller
- name: catalog-calendar-controller
  description: Catalog Calendar Controller
- name: catalog-calendar-properties-controller
  description: Calendar Property Get Controller
- name: catalog-layout-controller
  description: Catalog Layout Controller
- name: catalog-lcp-configuration-controller
  description: Catalog Lcp Configuration Controller
- name: catalog-lcp-template-controller
  description: Catalog Lcp Template Controller
- name: catalog-offer-label-controller
  description: Catalog Offer Label Controller
- name: catalog-offer-label-view-controller
  description: Catalog Offer Label View Controller
- name: catalog-offer-tariff-plan-details-controller
  description: Catalog Offer Tariff Plan Details Controller
- name: catalog-parameter-group-controller
  description: Catalog Parameter Group Controller
- name: catalog-price-item-controller
  description: Catalog Price Item Controller
- name: catalog-product-controller
  description: Catalog Product Controller
- name: catalog-product-offering-controller
  description: Catalog Product Offering Controller
- name: catalog-product-offering-full-view-controller
  description: Catalog Product Offering Full View Controller
- name: catalog-provider-controller
  description: Catalog Provider Controller
- name: catalog-rating-parameter-controller
  description: Catalog Rating Parameter Controller
- name: catalog-rating-parameter-set-controller
  description: Catalog Rating Parameter Set Controller
- name: catalog-service-controller
  description: Catalog Service Controller
- name: catalog-tariff-controller
  description: Catalog Tariff Controller
- name: catalog-tariff-plan-controller
  description: Catalog Tariff Plan Controller
- name: catalog-tariff-step-controller
  description: Tariff Step Get Controller
- name: compatibility-set-controller
  description: Compatibility Set Controller
- name: currency-controller
  description: Currency Controller
- name: eligibility-set-controller
  description: Eligibility Set Controller
- name: eligibility-set-schema-controller
  description: Eligibility Set Schema Controller
- name: exchange-rate-controller
  description: Exchange Rate Controller
- name: individual-offer-controller
  description: Individual Offer Controller
- name: layout-rating-parameters-group-controller
  description: Layout Rating Parameters Group Controller
- name: lookup-controller
  description: Lookup Controller
- name: operation-handler
  description: Operation Handler
- name: product-offering-view-controller
  description: Product Offering View Controller
- name: web-mvc-links-handler
  description: Web Mvc Links Handler
- name: x-days-offer-action-controller
  description: X Days Offer Action Controller
- name: zone-controller
  description: Zone Controller
- name: zone-set-controller
  description: Zone Set Controller
